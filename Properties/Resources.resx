<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="CUT_INDICATOR" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAi0AAAA2CAIAAACEBT5UAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAABG5JREFUeF7t3UF2mzAURuGuoUw99ZQhQw2zEe2FtbAT7STr6LONg/klQCKlavDV
        +SZtHCwuPucVu01/fX5+AABQC3MIAFATcwgAUBNzCABQE3MIAFATcwgAUBNzCABQE3MIAFATcwgAUBNz
        CABQE3MIAFATcwgAUBNzCABQE3MIAFATcwgAUNPuOeTC0Hp/ca75/VxNY7+89n0X9MHvgCCCIIIggiDi
        fYOUz6HQ9f4yRlpezrdD0O8N/dU1L4mtb/SYhNB6uTB9N311uI5f+Mbyw8vTlSKIIIggiCCIePsgZXMo
        DLNzXl92bvMirn8588ey33p5wIIoSuParz8dhH77+m2uxr9cgxIEEQQRBBEEEQQxBXNox+aa5jpMRzjb
        a4gggiCCIIIggiAPuXNo385O/BoiiCCIIIggiCDIl7w5FG36sewm0fddmO4TXQidd9M5zO8iD0m2tLei
        VfzeLkEEQQRBBEEEQV7kzKHEqdqa7Vvcwt2+5R+M7mWdn7/rOr9+30EQQRBBEEEQQZCZjDkU7dhWxqbd
        4C/zh53lNUQQQRBBEEEQQZC5zTmUOM+9z32OZAQRBBEEEQQRBFFbcyi08d8p3PGJ3N0pkhFEEEQQRBBE
        ECSyMYeSf3Gi+BO50RmSEUQQRBBEEEQQJLYxhwavJzn/lKzIGZIRRBBEEEQQRBAktj6H9Flt5W036QTJ
        CCIIIggiCCIIklA+h3a+j2lO+hoiyHwRZDzccxFkPNxzEWQ83HO9d5Cb1TmU+jwt6yTTfn4yggiCCIII
        ggiCpDCHShBEEEQQRBBEECSFOVSCIIIggiCCIIIgKcyhEgQRBBEEEQQRBEkpnkNv/ZEaQQRBBEEEQQRB
        UlbnUPSstt47GUEEQQRBBEEEQRLW51DiJPO2mxb/A66flowggiCCIIIggiAJ63MocZLfeeITJCOIIIgg
        iCCIIEhsYw4lfxRS1nmmJC5Axg3pvu86KBlBBEEEQQRBBEFiG3Mo/ana3p+GFF+AjEPZBdIN5F2zY5IR
        RBBEEEQQRBAksjWHUju2lTc8I6kLsHH+0f2jrbyfTXtQMoIIggiCCIIIgqjNOZTetC2rtvZ+Yuh6f4km
        s57GY/lhoVoqcd77mOaoZARRBBEEEQQRBJnLmEML09uWbcL3XXjdR3BhaB//j/rjAbLL+C7ysZxvhzCF
        C/fi49fma2PUTw57DRFEEUQQRBBEEGQmZw4ZffrMldrl4gXIWdlz2xz3GjIEEQQRBBEEEQSZZM4hm8mJ
        u7nNld7lrkPZim5I1x36GiJIhCCCIIIggiBP2XPIhO7r3jBzLZ5kmG4zM1fjinqZg19DhiCCIIIggiCC
        IHclc+jGDf01c/A6O8m1LbrBX3IOZae6+JnbGidvhrqC2898BBEEEQQRBBEEKZ5Do/tHXlfnZnuyc7Pf
        8b7tB5e/uTC0i4fq29Xo/xGCCIIIggiCiHcOsnMOAQDwVzCHAAA1MYcAADUxhwAANTGHAAA1MYcAADUx
        hwAA9Xx+/AEm0h6zN9JAGgAAAABJRU5ErkJggg==
</value>
  </data>
</root>